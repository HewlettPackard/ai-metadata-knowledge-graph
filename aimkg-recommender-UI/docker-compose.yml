version: '3.8'

services:
  aimkg-recommender-ui:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: aimkg-recommender-ui
    ports:
      - "9089:9089"
    networks:
      - neo_net_kg
    links:
      - neo4j
    volumes:
      - .:/app
      - ./utils:/app/utils  # Mount the utils folder as a volume
    environment:
      - FLASK_APP=app.py
      - FLASK_RUN_HOST=0.0.0.0
      - NEO4J_URI=bolt://neo4j:7687
      #- NEO4J_URI=bolt://localhost:7687
      - NEO4J_USER_NAME=${NEO4J_USER_NAME} #from .env file
      - NEO4J_PASSWD=${NEO4J_PASSWD} #from .env file
    depends_on:
      neo4j:
        condition: service_healthy  # Wait for neo4j healthcheck to pass before starting this service
  neo4j:
    image: neo4j:5.16.0-community 
    container_name: neo4j
    hostname: neo4j
    volumes:
      # path where neo4j creates a graphs and stores it as a database
      - $HOME/graph_data:/data
      # path where neo4j source data is stored
      - $HOME/raw_files:/var/lib/neo4j/import
      # path where neo4j plugins are stored
      - $HOME/neo4j_plugins:/var/lib/neo4j/plugins
    ports:
      - "7474:7474"
      - "7687:7687"
    user: "$UID:$GID"
    environment:
      - NEO4J_AUTH=${NEO4J_USER_NAME}/${NEO4J_PASSWD}
      - NEO4J_PLUGINS=["apoc"]
      - apoc.import.file.enabled=true
      - apoc.export.file.enabled=true
      - apoc.export.json.all=true
      - apoc.trigger.enabled=true
      - apoc.periodic.enabled=true
      - dbms.security.procedures.unrestricted=apoc.*
      # Comment these lines if you do not have the memory available
      - NEO4J_dbms_memory_pagecache_size=4G
      - NEO4j_dbms_memory_heap_initial__size=4G
      - NEO4J_dbms_memory_heap_max__size=8G
    networks:
      - neo_net_kg
    healthcheck:
      test: wget http://localhost:7474 || exit 1
      interval: 1s
      timeout: 10s
      retries: 200
      start_period: 3s

networks:
  neo_net_kg:  